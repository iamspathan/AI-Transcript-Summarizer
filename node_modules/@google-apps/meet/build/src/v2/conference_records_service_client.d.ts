/// <reference types="node" />
import type * as gax from 'google-gax';
import type { Callback, CallOptions, Descriptors, ClientOptions, PaginationCallback } from 'google-gax';
import { Transform } from 'stream';
import * as protos from '../../protos/protos';
/**
 *  REST API for services dealing with conference records.
 * @class
 * @memberof v2
 */
export declare class ConferenceRecordsServiceClient {
    private _terminated;
    private _opts;
    private _providedCustomServicePath;
    private _gaxModule;
    private _gaxGrpc;
    private _protos;
    private _defaults;
    private _universeDomain;
    private _servicePath;
    auth: gax.GoogleAuth;
    descriptors: Descriptors;
    warn: (code: string, message: string, warnType?: string) => void;
    innerApiCalls: {
        [name: string]: Function;
    };
    pathTemplates: {
        [name: string]: gax.PathTemplate;
    };
    conferenceRecordsServiceStub?: Promise<{
        [name: string]: Function;
    }>;
    /**
     * Construct an instance of ConferenceRecordsServiceClient.
     *
     * @param {object} [options] - The configuration object.
     * The options accepted by the constructor are described in detail
     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).
     * The common options are:
     * @param {object} [options.credentials] - Credentials object.
     * @param {string} [options.credentials.client_email]
     * @param {string} [options.credentials.private_key]
     * @param {string} [options.email] - Account email address. Required when
     *     using a .pem or .p12 keyFilename.
     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or
     *     .p12 key downloaded from the Google Developers Console. If you provide
     *     a path to a JSON file, the projectId option below is not necessary.
     *     NOTE: .pem and .p12 require you to specify options.email as well.
     * @param {number} [options.port] - The port on which to connect to
     *     the remote host.
     * @param {string} [options.projectId] - The project ID from the Google
     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check
     *     the environment variable GCLOUD_PROJECT for your project ID. If your
     *     app is running in an environment which supports
     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},
     *     your project ID will be detected automatically.
     * @param {string} [options.apiEndpoint] - The domain name of the
     *     API remote host.
     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.
     *     Follows the structure of {@link gapicConfig}.
     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.
     *     For more information, please check the
     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.
     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you
     *     need to avoid loading the default gRPC version and want to use the fallback
     *     HTTP implementation. Load only fallback version and pass it to the constructor:
     *     ```
     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC
     *     const client = new ConferenceRecordsServiceClient({fallback: true}, gax);
     *     ```
     */
    constructor(opts?: ClientOptions, gaxInstance?: typeof gax | typeof gax.fallback);
    /**
     * Initialize the client.
     * Performs asynchronous operations (such as authentication) and prepares the client.
     * This function will be called automatically when any class method is called for the
     * first time, but if you need to initialize it before calling an actual method,
     * feel free to call initialize() directly.
     *
     * You can await on this method if you want to make sure the client is initialized.
     *
     * @returns {Promise} A promise that resolves to an authenticated service stub.
     */
    initialize(): Promise<{
        [name: string]: Function;
    }>;
    /**
     * The DNS address for this API service.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get servicePath(): string;
    /**
     * The DNS address for this API service - same as servicePath.
     * @deprecated Use the apiEndpoint method of the client instance.
     * @returns {string} The DNS address for this service.
     */
    static get apiEndpoint(): string;
    /**
     * The DNS address for this API service.
     * @returns {string} The DNS address for this service.
     */
    get apiEndpoint(): string;
    get universeDomain(): string;
    /**
     * The port for this API service.
     * @returns {number} The default port for this service.
     */
    static get port(): number;
    /**
     * The scopes needed to make gRPC calls for every method defined
     * in this service.
     * @returns {string[]} List of default scopes.
     */
    static get scopes(): string[];
    getProjectId(): Promise<string>;
    getProjectId(callback: Callback<string, undefined, undefined>): void;
    /**
     * Gets a conference record by conference ID.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Resource name of the conference.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.apps.meet.v2.ConferenceRecord|ConferenceRecord}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.get_conference_record.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_GetConferenceRecord_async
     */
    getConferenceRecord(request?: protos.google.apps.meet.v2.IGetConferenceRecordRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.IConferenceRecord,
        protos.google.apps.meet.v2.IGetConferenceRecordRequest | undefined,
        {} | undefined
    ]>;
    getConferenceRecord(request: protos.google.apps.meet.v2.IGetConferenceRecordRequest, options: CallOptions, callback: Callback<protos.google.apps.meet.v2.IConferenceRecord, protos.google.apps.meet.v2.IGetConferenceRecordRequest | null | undefined, {} | null | undefined>): void;
    getConferenceRecord(request: protos.google.apps.meet.v2.IGetConferenceRecordRequest, callback: Callback<protos.google.apps.meet.v2.IConferenceRecord, protos.google.apps.meet.v2.IGetConferenceRecordRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets a participant by participant ID.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Resource name of the participant.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.apps.meet.v2.Participant|Participant}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.get_participant.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_GetParticipant_async
     */
    getParticipant(request?: protos.google.apps.meet.v2.IGetParticipantRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.IParticipant,
        protos.google.apps.meet.v2.IGetParticipantRequest | undefined,
        {} | undefined
    ]>;
    getParticipant(request: protos.google.apps.meet.v2.IGetParticipantRequest, options: CallOptions, callback: Callback<protos.google.apps.meet.v2.IParticipant, protos.google.apps.meet.v2.IGetParticipantRequest | null | undefined, {} | null | undefined>): void;
    getParticipant(request: protos.google.apps.meet.v2.IGetParticipantRequest, callback: Callback<protos.google.apps.meet.v2.IParticipant, protos.google.apps.meet.v2.IGetParticipantRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets a participant session by participant session ID.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Resource name of the participant.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.apps.meet.v2.ParticipantSession|ParticipantSession}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.get_participant_session.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_GetParticipantSession_async
     */
    getParticipantSession(request?: protos.google.apps.meet.v2.IGetParticipantSessionRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.IParticipantSession,
        protos.google.apps.meet.v2.IGetParticipantSessionRequest | undefined,
        {} | undefined
    ]>;
    getParticipantSession(request: protos.google.apps.meet.v2.IGetParticipantSessionRequest, options: CallOptions, callback: Callback<protos.google.apps.meet.v2.IParticipantSession, protos.google.apps.meet.v2.IGetParticipantSessionRequest | null | undefined, {} | null | undefined>): void;
    getParticipantSession(request: protos.google.apps.meet.v2.IGetParticipantSessionRequest, callback: Callback<protos.google.apps.meet.v2.IParticipantSession, protos.google.apps.meet.v2.IGetParticipantSessionRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets a recording by recording ID.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Resource name of the recording.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.apps.meet.v2.Recording|Recording}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.get_recording.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_GetRecording_async
     */
    getRecording(request?: protos.google.apps.meet.v2.IGetRecordingRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.IRecording,
        protos.google.apps.meet.v2.IGetRecordingRequest | undefined,
        {} | undefined
    ]>;
    getRecording(request: protos.google.apps.meet.v2.IGetRecordingRequest, options: CallOptions, callback: Callback<protos.google.apps.meet.v2.IRecording, protos.google.apps.meet.v2.IGetRecordingRequest | null | undefined, {} | null | undefined>): void;
    getRecording(request: protos.google.apps.meet.v2.IGetRecordingRequest, callback: Callback<protos.google.apps.meet.v2.IRecording, protos.google.apps.meet.v2.IGetRecordingRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets a transcript by transcript ID.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Resource name of the transcript.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.apps.meet.v2.Transcript|Transcript}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.get_transcript.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_GetTranscript_async
     */
    getTranscript(request?: protos.google.apps.meet.v2.IGetTranscriptRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.ITranscript,
        protos.google.apps.meet.v2.IGetTranscriptRequest | undefined,
        {} | undefined
    ]>;
    getTranscript(request: protos.google.apps.meet.v2.IGetTranscriptRequest, options: CallOptions, callback: Callback<protos.google.apps.meet.v2.ITranscript, protos.google.apps.meet.v2.IGetTranscriptRequest | null | undefined, {} | null | undefined>): void;
    getTranscript(request: protos.google.apps.meet.v2.IGetTranscriptRequest, callback: Callback<protos.google.apps.meet.v2.ITranscript, protos.google.apps.meet.v2.IGetTranscriptRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Gets a `TranscriptEntry` resource by entry ID.
     *
     * Note: The transcript entries returned by the Google Meet API might not
     * match the transcription found in the Google Docs transcript file. This can
     * occur when the Google Docs transcript file is modified after generation.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.name
     *   Required. Resource name of the `TranscriptEntry`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is an object representing {@link protos.google.apps.meet.v2.TranscriptEntry|TranscriptEntry}.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.get_transcript_entry.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_GetTranscriptEntry_async
     */
    getTranscriptEntry(request?: protos.google.apps.meet.v2.IGetTranscriptEntryRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.ITranscriptEntry,
        protos.google.apps.meet.v2.IGetTranscriptEntryRequest | undefined,
        {} | undefined
    ]>;
    getTranscriptEntry(request: protos.google.apps.meet.v2.IGetTranscriptEntryRequest, options: CallOptions, callback: Callback<protos.google.apps.meet.v2.ITranscriptEntry, protos.google.apps.meet.v2.IGetTranscriptEntryRequest | null | undefined, {} | null | undefined>): void;
    getTranscriptEntry(request: protos.google.apps.meet.v2.IGetTranscriptEntryRequest, callback: Callback<protos.google.apps.meet.v2.ITranscriptEntry, protos.google.apps.meet.v2.IGetTranscriptEntryRequest | null | undefined, {} | null | undefined>): void;
    /**
     * Lists the conference records. By default, ordered by start time and in
     * descending order.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {number} [request.pageSize]
     *   Optional. Maximum number of conference records to return. The service might
     *   return fewer than this value. If unspecified, at most 25 conference records
     *   are returned. The maximum value is 100; values above 100 are coerced to
     *   100. Maximum might change in the future.
     * @param {string} [request.pageToken]
     *   Optional. Page token returned from previous List Call.
     * @param {string} [request.filter]
     *   Optional. User specified filtering condition in [EBNF
     *   format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
     *   The following are the filterable fields:
     *
     *   * `space.meeting_code`
     *   * `space.name`
     *   * `start_time`
     *   * `end_time`
     *
     *   For example, `space.meeting_code = "abc-mnop-xyz"`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.apps.meet.v2.ConferenceRecord|ConferenceRecord}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listConferenceRecordsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listConferenceRecords(request?: protos.google.apps.meet.v2.IListConferenceRecordsRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.IConferenceRecord[],
        protos.google.apps.meet.v2.IListConferenceRecordsRequest | null,
        protos.google.apps.meet.v2.IListConferenceRecordsResponse
    ]>;
    listConferenceRecords(request: protos.google.apps.meet.v2.IListConferenceRecordsRequest, options: CallOptions, callback: PaginationCallback<protos.google.apps.meet.v2.IListConferenceRecordsRequest, protos.google.apps.meet.v2.IListConferenceRecordsResponse | null | undefined, protos.google.apps.meet.v2.IConferenceRecord>): void;
    listConferenceRecords(request: protos.google.apps.meet.v2.IListConferenceRecordsRequest, callback: PaginationCallback<protos.google.apps.meet.v2.IListConferenceRecordsRequest, protos.google.apps.meet.v2.IListConferenceRecordsResponse | null | undefined, protos.google.apps.meet.v2.IConferenceRecord>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {number} [request.pageSize]
     *   Optional. Maximum number of conference records to return. The service might
     *   return fewer than this value. If unspecified, at most 25 conference records
     *   are returned. The maximum value is 100; values above 100 are coerced to
     *   100. Maximum might change in the future.
     * @param {string} [request.pageToken]
     *   Optional. Page token returned from previous List Call.
     * @param {string} [request.filter]
     *   Optional. User specified filtering condition in [EBNF
     *   format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
     *   The following are the filterable fields:
     *
     *   * `space.meeting_code`
     *   * `space.name`
     *   * `start_time`
     *   * `end_time`
     *
     *   For example, `space.meeting_code = "abc-mnop-xyz"`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.apps.meet.v2.ConferenceRecord|ConferenceRecord} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listConferenceRecordsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listConferenceRecordsStream(request?: protos.google.apps.meet.v2.IListConferenceRecordsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listConferenceRecords`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {number} [request.pageSize]
     *   Optional. Maximum number of conference records to return. The service might
     *   return fewer than this value. If unspecified, at most 25 conference records
     *   are returned. The maximum value is 100; values above 100 are coerced to
     *   100. Maximum might change in the future.
     * @param {string} [request.pageToken]
     *   Optional. Page token returned from previous List Call.
     * @param {string} [request.filter]
     *   Optional. User specified filtering condition in [EBNF
     *   format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
     *   The following are the filterable fields:
     *
     *   * `space.meeting_code`
     *   * `space.name`
     *   * `start_time`
     *   * `end_time`
     *
     *   For example, `space.meeting_code = "abc-mnop-xyz"`.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.apps.meet.v2.ConferenceRecord|ConferenceRecord}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.list_conference_records.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_ListConferenceRecords_async
     */
    listConferenceRecordsAsync(request?: protos.google.apps.meet.v2.IListConferenceRecordsRequest, options?: CallOptions): AsyncIterable<protos.google.apps.meet.v2.IConferenceRecord>;
    /**
     * Lists the participants in a conference record. By default, ordered by join
     * time and in descending order. This API supports `fields` as standard
     * parameters like every other API. However, when the `fields` request
     * parameter is omitted, this API defaults to `'participants/*,
     * next_page_token'`.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format: `conferenceRecords/{conference_record}`
     * @param {number} request.pageSize
     *   Maximum number of participants to return. The service might return fewer
     *   than this value.
     *   If unspecified, at most 100 participants are returned.
     *   The maximum value is 250; values above 250 are coerced to 250.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {string} [request.filter]
     *   Optional. User specified filtering condition in [EBNF
     *   format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
     *   The following are the filterable fields:
     *
     *   * `earliest_start_time`
     *   * `latest_end_time`
     *
     *   For example, `latest_end_time IS NULL` returns active participants in
     *   the conference.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.apps.meet.v2.Participant|Participant}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listParticipantsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listParticipants(request?: protos.google.apps.meet.v2.IListParticipantsRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.IParticipant[],
        protos.google.apps.meet.v2.IListParticipantsRequest | null,
        protos.google.apps.meet.v2.IListParticipantsResponse
    ]>;
    listParticipants(request: protos.google.apps.meet.v2.IListParticipantsRequest, options: CallOptions, callback: PaginationCallback<protos.google.apps.meet.v2.IListParticipantsRequest, protos.google.apps.meet.v2.IListParticipantsResponse | null | undefined, protos.google.apps.meet.v2.IParticipant>): void;
    listParticipants(request: protos.google.apps.meet.v2.IListParticipantsRequest, callback: PaginationCallback<protos.google.apps.meet.v2.IListParticipantsRequest, protos.google.apps.meet.v2.IListParticipantsResponse | null | undefined, protos.google.apps.meet.v2.IParticipant>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format: `conferenceRecords/{conference_record}`
     * @param {number} request.pageSize
     *   Maximum number of participants to return. The service might return fewer
     *   than this value.
     *   If unspecified, at most 100 participants are returned.
     *   The maximum value is 250; values above 250 are coerced to 250.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {string} [request.filter]
     *   Optional. User specified filtering condition in [EBNF
     *   format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
     *   The following are the filterable fields:
     *
     *   * `earliest_start_time`
     *   * `latest_end_time`
     *
     *   For example, `latest_end_time IS NULL` returns active participants in
     *   the conference.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.apps.meet.v2.Participant|Participant} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listParticipantsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listParticipantsStream(request?: protos.google.apps.meet.v2.IListParticipantsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listParticipants`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format: `conferenceRecords/{conference_record}`
     * @param {number} request.pageSize
     *   Maximum number of participants to return. The service might return fewer
     *   than this value.
     *   If unspecified, at most 100 participants are returned.
     *   The maximum value is 250; values above 250 are coerced to 250.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {string} [request.filter]
     *   Optional. User specified filtering condition in [EBNF
     *   format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
     *   The following are the filterable fields:
     *
     *   * `earliest_start_time`
     *   * `latest_end_time`
     *
     *   For example, `latest_end_time IS NULL` returns active participants in
     *   the conference.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.apps.meet.v2.Participant|Participant}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.list_participants.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_ListParticipants_async
     */
    listParticipantsAsync(request?: protos.google.apps.meet.v2.IListParticipantsRequest, options?: CallOptions): AsyncIterable<protos.google.apps.meet.v2.IParticipant>;
    /**
     * Lists the participant sessions of a participant in a conference record. By
     * default, ordered by join time and in descending order. This API supports
     * `fields` as standard parameters like every other API. However, when the
     * `fields` request parameter is omitted this API defaults to
     * `'participantsessions/*, next_page_token'`.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format:
     *   `conferenceRecords/{conference_record}/participants/{participant}`
     * @param {number} [request.pageSize]
     *   Optional. Maximum number of participant sessions to return. The service
     *   might return fewer than this value. If unspecified, at most 100
     *   participants are returned. The maximum value is 250; values above 250 are
     *   coerced to 250. Maximum might change in the future.
     * @param {string} [request.pageToken]
     *   Optional. Page token returned from previous List Call.
     * @param {string} [request.filter]
     *   Optional. User specified filtering condition in [EBNF
     *   format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
     *   The following are the filterable fields:
     *
     *   * `start_time`
     *   * `end_time`
     *
     *   For example, `end_time IS NULL` returns active participant sessions in
     *   the conference record.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.apps.meet.v2.ParticipantSession|ParticipantSession}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listParticipantSessionsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listParticipantSessions(request?: protos.google.apps.meet.v2.IListParticipantSessionsRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.IParticipantSession[],
        protos.google.apps.meet.v2.IListParticipantSessionsRequest | null,
        protos.google.apps.meet.v2.IListParticipantSessionsResponse
    ]>;
    listParticipantSessions(request: protos.google.apps.meet.v2.IListParticipantSessionsRequest, options: CallOptions, callback: PaginationCallback<protos.google.apps.meet.v2.IListParticipantSessionsRequest, protos.google.apps.meet.v2.IListParticipantSessionsResponse | null | undefined, protos.google.apps.meet.v2.IParticipantSession>): void;
    listParticipantSessions(request: protos.google.apps.meet.v2.IListParticipantSessionsRequest, callback: PaginationCallback<protos.google.apps.meet.v2.IListParticipantSessionsRequest, protos.google.apps.meet.v2.IListParticipantSessionsResponse | null | undefined, protos.google.apps.meet.v2.IParticipantSession>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format:
     *   `conferenceRecords/{conference_record}/participants/{participant}`
     * @param {number} [request.pageSize]
     *   Optional. Maximum number of participant sessions to return. The service
     *   might return fewer than this value. If unspecified, at most 100
     *   participants are returned. The maximum value is 250; values above 250 are
     *   coerced to 250. Maximum might change in the future.
     * @param {string} [request.pageToken]
     *   Optional. Page token returned from previous List Call.
     * @param {string} [request.filter]
     *   Optional. User specified filtering condition in [EBNF
     *   format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
     *   The following are the filterable fields:
     *
     *   * `start_time`
     *   * `end_time`
     *
     *   For example, `end_time IS NULL` returns active participant sessions in
     *   the conference record.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.apps.meet.v2.ParticipantSession|ParticipantSession} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listParticipantSessionsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listParticipantSessionsStream(request?: protos.google.apps.meet.v2.IListParticipantSessionsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listParticipantSessions`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format:
     *   `conferenceRecords/{conference_record}/participants/{participant}`
     * @param {number} [request.pageSize]
     *   Optional. Maximum number of participant sessions to return. The service
     *   might return fewer than this value. If unspecified, at most 100
     *   participants are returned. The maximum value is 250; values above 250 are
     *   coerced to 250. Maximum might change in the future.
     * @param {string} [request.pageToken]
     *   Optional. Page token returned from previous List Call.
     * @param {string} [request.filter]
     *   Optional. User specified filtering condition in [EBNF
     *   format](https://en.wikipedia.org/wiki/Extended_Backus%E2%80%93Naur_form).
     *   The following are the filterable fields:
     *
     *   * `start_time`
     *   * `end_time`
     *
     *   For example, `end_time IS NULL` returns active participant sessions in
     *   the conference record.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.apps.meet.v2.ParticipantSession|ParticipantSession}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.list_participant_sessions.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_ListParticipantSessions_async
     */
    listParticipantSessionsAsync(request?: protos.google.apps.meet.v2.IListParticipantSessionsRequest, options?: CallOptions): AsyncIterable<protos.google.apps.meet.v2.IParticipantSession>;
    /**
     * Lists the recording resources from the conference record. By default,
     * ordered by start time and in ascending order.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format: `conferenceRecords/{conference_record}`
     * @param {number} request.pageSize
     *   Maximum number of recordings to return. The service might return fewer
     *   than this value.
     *   If unspecified, at most 10 recordings are returned.
     *   The maximum value is 100; values above 100 are coerced to 100.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.apps.meet.v2.Recording|Recording}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listRecordingsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listRecordings(request?: protos.google.apps.meet.v2.IListRecordingsRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.IRecording[],
        protos.google.apps.meet.v2.IListRecordingsRequest | null,
        protos.google.apps.meet.v2.IListRecordingsResponse
    ]>;
    listRecordings(request: protos.google.apps.meet.v2.IListRecordingsRequest, options: CallOptions, callback: PaginationCallback<protos.google.apps.meet.v2.IListRecordingsRequest, protos.google.apps.meet.v2.IListRecordingsResponse | null | undefined, protos.google.apps.meet.v2.IRecording>): void;
    listRecordings(request: protos.google.apps.meet.v2.IListRecordingsRequest, callback: PaginationCallback<protos.google.apps.meet.v2.IListRecordingsRequest, protos.google.apps.meet.v2.IListRecordingsResponse | null | undefined, protos.google.apps.meet.v2.IRecording>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format: `conferenceRecords/{conference_record}`
     * @param {number} request.pageSize
     *   Maximum number of recordings to return. The service might return fewer
     *   than this value.
     *   If unspecified, at most 10 recordings are returned.
     *   The maximum value is 100; values above 100 are coerced to 100.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.apps.meet.v2.Recording|Recording} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listRecordingsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listRecordingsStream(request?: protos.google.apps.meet.v2.IListRecordingsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listRecordings`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format: `conferenceRecords/{conference_record}`
     * @param {number} request.pageSize
     *   Maximum number of recordings to return. The service might return fewer
     *   than this value.
     *   If unspecified, at most 10 recordings are returned.
     *   The maximum value is 100; values above 100 are coerced to 100.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.apps.meet.v2.Recording|Recording}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.list_recordings.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_ListRecordings_async
     */
    listRecordingsAsync(request?: protos.google.apps.meet.v2.IListRecordingsRequest, options?: CallOptions): AsyncIterable<protos.google.apps.meet.v2.IRecording>;
    /**
     * Lists the set of transcripts from the conference record. By default,
     * ordered by start time and in ascending order.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format: `conferenceRecords/{conference_record}`
     * @param {number} request.pageSize
     *   Maximum number of transcripts to return. The service might return fewer
     *   than this value.
     *   If unspecified, at most 10 transcripts are returned.
     *   The maximum value is 100; values above 100 are coerced to 100.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.apps.meet.v2.Transcript|Transcript}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listTranscriptsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listTranscripts(request?: protos.google.apps.meet.v2.IListTranscriptsRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.ITranscript[],
        protos.google.apps.meet.v2.IListTranscriptsRequest | null,
        protos.google.apps.meet.v2.IListTranscriptsResponse
    ]>;
    listTranscripts(request: protos.google.apps.meet.v2.IListTranscriptsRequest, options: CallOptions, callback: PaginationCallback<protos.google.apps.meet.v2.IListTranscriptsRequest, protos.google.apps.meet.v2.IListTranscriptsResponse | null | undefined, protos.google.apps.meet.v2.ITranscript>): void;
    listTranscripts(request: protos.google.apps.meet.v2.IListTranscriptsRequest, callback: PaginationCallback<protos.google.apps.meet.v2.IListTranscriptsRequest, protos.google.apps.meet.v2.IListTranscriptsResponse | null | undefined, protos.google.apps.meet.v2.ITranscript>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format: `conferenceRecords/{conference_record}`
     * @param {number} request.pageSize
     *   Maximum number of transcripts to return. The service might return fewer
     *   than this value.
     *   If unspecified, at most 10 transcripts are returned.
     *   The maximum value is 100; values above 100 are coerced to 100.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.apps.meet.v2.Transcript|Transcript} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listTranscriptsAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listTranscriptsStream(request?: protos.google.apps.meet.v2.IListTranscriptsRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listTranscripts`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format: `conferenceRecords/{conference_record}`
     * @param {number} request.pageSize
     *   Maximum number of transcripts to return. The service might return fewer
     *   than this value.
     *   If unspecified, at most 10 transcripts are returned.
     *   The maximum value is 100; values above 100 are coerced to 100.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.apps.meet.v2.Transcript|Transcript}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.list_transcripts.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_ListTranscripts_async
     */
    listTranscriptsAsync(request?: protos.google.apps.meet.v2.IListTranscriptsRequest, options?: CallOptions): AsyncIterable<protos.google.apps.meet.v2.ITranscript>;
    /**
     * Lists the structured transcript entries per transcript. By default, ordered
     * by start time and in ascending order.
     *
     * Note: The transcript entries returned by the Google Meet API might not
     * match the transcription found in the Google Docs transcript file. This can
     * occur when the Google Docs transcript file is modified after generation.
     *
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format:
     *   `conferenceRecords/{conference_record}/transcripts/{transcript}`
     * @param {number} request.pageSize
     *   Maximum number of entries to return. The service might return fewer than
     *   this value.
     *   If unspecified, at most 10 entries are returned.
     *   The maximum value is 100; values above 100 are coerced to 100.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Promise} - The promise which resolves to an array.
     *   The first element of the array is Array of {@link protos.google.apps.meet.v2.TranscriptEntry|TranscriptEntry}.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed and will merge results from all the pages into this array.
     *   Note that it can affect your quota.
     *   We recommend using `listTranscriptEntriesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listTranscriptEntries(request?: protos.google.apps.meet.v2.IListTranscriptEntriesRequest, options?: CallOptions): Promise<[
        protos.google.apps.meet.v2.ITranscriptEntry[],
        protos.google.apps.meet.v2.IListTranscriptEntriesRequest | null,
        protos.google.apps.meet.v2.IListTranscriptEntriesResponse
    ]>;
    listTranscriptEntries(request: protos.google.apps.meet.v2.IListTranscriptEntriesRequest, options: CallOptions, callback: PaginationCallback<protos.google.apps.meet.v2.IListTranscriptEntriesRequest, protos.google.apps.meet.v2.IListTranscriptEntriesResponse | null | undefined, protos.google.apps.meet.v2.ITranscriptEntry>): void;
    listTranscriptEntries(request: protos.google.apps.meet.v2.IListTranscriptEntriesRequest, callback: PaginationCallback<protos.google.apps.meet.v2.IListTranscriptEntriesRequest, protos.google.apps.meet.v2.IListTranscriptEntriesResponse | null | undefined, protos.google.apps.meet.v2.ITranscriptEntry>): void;
    /**
     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format:
     *   `conferenceRecords/{conference_record}/transcripts/{transcript}`
     * @param {number} request.pageSize
     *   Maximum number of entries to return. The service might return fewer than
     *   this value.
     *   If unspecified, at most 10 entries are returned.
     *   The maximum value is 100; values above 100 are coerced to 100.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Stream}
     *   An object stream which emits an object representing {@link protos.google.apps.meet.v2.TranscriptEntry|TranscriptEntry} on 'data' event.
     *   The client library will perform auto-pagination by default: it will call the API as many
     *   times as needed. Note that it can affect your quota.
     *   We recommend using `listTranscriptEntriesAsync()`
     *   method described below for async iteration which you can stop as needed.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     */
    listTranscriptEntriesStream(request?: protos.google.apps.meet.v2.IListTranscriptEntriesRequest, options?: CallOptions): Transform;
    /**
     * Equivalent to `listTranscriptEntries`, but returns an iterable object.
     *
     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.
     * @param {Object} request
     *   The request object that will be sent.
     * @param {string} request.parent
     *   Required. Format:
     *   `conferenceRecords/{conference_record}/transcripts/{transcript}`
     * @param {number} request.pageSize
     *   Maximum number of entries to return. The service might return fewer than
     *   this value.
     *   If unspecified, at most 10 entries are returned.
     *   The maximum value is 100; values above 100 are coerced to 100.
     *   Maximum might change in the future.
     * @param {string} request.pageToken
     *   Page token returned from previous List Call.
     * @param {object} [options]
     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.
     * @returns {Object}
     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.
     *   When you iterate the returned iterable, each element will be an object representing
     *   {@link protos.google.apps.meet.v2.TranscriptEntry|TranscriptEntry}. The API will be called under the hood as needed, once per the page,
     *   so you can stop the iteration when you don't need more results.
     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }
     *   for more details and examples.
     * @example <caption>include:samples/generated/v2/conference_records_service.list_transcript_entries.js</caption>
     * region_tag:meet_v2_generated_ConferenceRecordsService_ListTranscriptEntries_async
     */
    listTranscriptEntriesAsync(request?: protos.google.apps.meet.v2.IListTranscriptEntriesRequest, options?: CallOptions): AsyncIterable<protos.google.apps.meet.v2.ITranscriptEntry>;
    /**
     * Return a fully-qualified conferenceRecord resource name string.
     *
     * @param {string} conference_record
     * @returns {string} Resource name string.
     */
    conferenceRecordPath(conferenceRecord: string): string;
    /**
     * Parse the conference_record from ConferenceRecord resource.
     *
     * @param {string} conferenceRecordName
     *   A fully-qualified path representing ConferenceRecord resource.
     * @returns {string} A string representing the conference_record.
     */
    matchConferenceRecordFromConferenceRecordName(conferenceRecordName: string): string | number;
    /**
     * Return a fully-qualified participant resource name string.
     *
     * @param {string} conference_record
     * @param {string} participant
     * @returns {string} Resource name string.
     */
    participantPath(conferenceRecord: string, participant: string): string;
    /**
     * Parse the conference_record from Participant resource.
     *
     * @param {string} participantName
     *   A fully-qualified path representing Participant resource.
     * @returns {string} A string representing the conference_record.
     */
    matchConferenceRecordFromParticipantName(participantName: string): string | number;
    /**
     * Parse the participant from Participant resource.
     *
     * @param {string} participantName
     *   A fully-qualified path representing Participant resource.
     * @returns {string} A string representing the participant.
     */
    matchParticipantFromParticipantName(participantName: string): string | number;
    /**
     * Return a fully-qualified participantSession resource name string.
     *
     * @param {string} conference_record
     * @param {string} participant
     * @param {string} participant_session
     * @returns {string} Resource name string.
     */
    participantSessionPath(conferenceRecord: string, participant: string, participantSession: string): string;
    /**
     * Parse the conference_record from ParticipantSession resource.
     *
     * @param {string} participantSessionName
     *   A fully-qualified path representing ParticipantSession resource.
     * @returns {string} A string representing the conference_record.
     */
    matchConferenceRecordFromParticipantSessionName(participantSessionName: string): string | number;
    /**
     * Parse the participant from ParticipantSession resource.
     *
     * @param {string} participantSessionName
     *   A fully-qualified path representing ParticipantSession resource.
     * @returns {string} A string representing the participant.
     */
    matchParticipantFromParticipantSessionName(participantSessionName: string): string | number;
    /**
     * Parse the participant_session from ParticipantSession resource.
     *
     * @param {string} participantSessionName
     *   A fully-qualified path representing ParticipantSession resource.
     * @returns {string} A string representing the participant_session.
     */
    matchParticipantSessionFromParticipantSessionName(participantSessionName: string): string | number;
    /**
     * Return a fully-qualified recording resource name string.
     *
     * @param {string} conference_record
     * @param {string} recording
     * @returns {string} Resource name string.
     */
    recordingPath(conferenceRecord: string, recording: string): string;
    /**
     * Parse the conference_record from Recording resource.
     *
     * @param {string} recordingName
     *   A fully-qualified path representing Recording resource.
     * @returns {string} A string representing the conference_record.
     */
    matchConferenceRecordFromRecordingName(recordingName: string): string | number;
    /**
     * Parse the recording from Recording resource.
     *
     * @param {string} recordingName
     *   A fully-qualified path representing Recording resource.
     * @returns {string} A string representing the recording.
     */
    matchRecordingFromRecordingName(recordingName: string): string | number;
    /**
     * Return a fully-qualified space resource name string.
     *
     * @param {string} space
     * @returns {string} Resource name string.
     */
    spacePath(space: string): string;
    /**
     * Parse the space from Space resource.
     *
     * @param {string} spaceName
     *   A fully-qualified path representing Space resource.
     * @returns {string} A string representing the space.
     */
    matchSpaceFromSpaceName(spaceName: string): string | number;
    /**
     * Return a fully-qualified transcript resource name string.
     *
     * @param {string} conference_record
     * @param {string} transcript
     * @returns {string} Resource name string.
     */
    transcriptPath(conferenceRecord: string, transcript: string): string;
    /**
     * Parse the conference_record from Transcript resource.
     *
     * @param {string} transcriptName
     *   A fully-qualified path representing Transcript resource.
     * @returns {string} A string representing the conference_record.
     */
    matchConferenceRecordFromTranscriptName(transcriptName: string): string | number;
    /**
     * Parse the transcript from Transcript resource.
     *
     * @param {string} transcriptName
     *   A fully-qualified path representing Transcript resource.
     * @returns {string} A string representing the transcript.
     */
    matchTranscriptFromTranscriptName(transcriptName: string): string | number;
    /**
     * Return a fully-qualified transcriptEntry resource name string.
     *
     * @param {string} conference_record
     * @param {string} transcript
     * @param {string} entry
     * @returns {string} Resource name string.
     */
    transcriptEntryPath(conferenceRecord: string, transcript: string, entry: string): string;
    /**
     * Parse the conference_record from TranscriptEntry resource.
     *
     * @param {string} transcriptEntryName
     *   A fully-qualified path representing TranscriptEntry resource.
     * @returns {string} A string representing the conference_record.
     */
    matchConferenceRecordFromTranscriptEntryName(transcriptEntryName: string): string | number;
    /**
     * Parse the transcript from TranscriptEntry resource.
     *
     * @param {string} transcriptEntryName
     *   A fully-qualified path representing TranscriptEntry resource.
     * @returns {string} A string representing the transcript.
     */
    matchTranscriptFromTranscriptEntryName(transcriptEntryName: string): string | number;
    /**
     * Parse the entry from TranscriptEntry resource.
     *
     * @param {string} transcriptEntryName
     *   A fully-qualified path representing TranscriptEntry resource.
     * @returns {string} A string representing the entry.
     */
    matchEntryFromTranscriptEntryName(transcriptEntryName: string): string | number;
    /**
     * Terminate the gRPC channel and close the client.
     *
     * The client will no longer be usable and all future behavior is undefined.
     * @returns {Promise} A promise that resolves when the client is closed.
     */
    close(): Promise<void>;
}
